version: '3.2'
services:

  rabbitmqinit:
    container_name: senzing-rabbitmq-init
    image: bitnami/minideb:stretch
    command: ["/bin/chown", "-R", "1001:1001", "/bitnami"]    
    networks:
      - backend
    user: "0"
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  rabbitmq:
    container_name: senzing-rabbitmq
    depends_on:
      - rabbitmqinit    
    environment:
#     See https://github.com/bitnami/bitnami-docker-rabbitmq#configuration
      RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    image: bitnami/rabbitmq:3.8.2
    networks:
      - backend
    ports:
      - 15672:15672
      - 5672:5672
    restart: always
    volumes:
      - ${RABBITMQ_DIR}:/bitnami

  producer:
    container_name: senzing-stream-producer
    depends_on:
      - rabbitmq
    environment:
#     See https://github.com/Senzing/docker-stream-producer#configuration
      SENZING_DELAY_IN_SECONDS: 30
      SENZING_INPUT_URL: ${SENZING_INPUT_URL}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      SENZING_RECORD_MAX: 5000
      SENZING_RECORD_MONITOR: 1000
      SENZING_SUBCOMMAND: json-to-rabbitmq
    image: senzing/stream-producer:1.1.1
    networks:
      - backend
    restart: on-failure

  postgres:
    container_name: senzing-postgres
    environment:
#     See https://github.com/docker-library/docs/blob/master/postgres/README.md#environment-variables
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    image: postgres:11.6
    networks:
      - backend
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ${POSTGRES_DIR}:/var/lib/postgresql/data

  postgresinit:
    container_name: senzing-postgresql-init
    depends_on:
      - postgres
    environment:
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432/${POSTGRES_DB}"
      SENZING_SQL_FILE: /opt/senzing/g2/resources/schema/g2core-schema-postgresql-create.sql
    image: senzing/postgresql-client:1.0.0
    networks:
      - backend
    restart: on-failure
    volumes:
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  phppgadmin:
    container_name: senzing-phppgadmin
    depends_on:
      - postgres    
    environment:
#     See https://github.com/dockage/phppgadmin#available-configuration-parameters
      - PHP_PG_ADMIN_SERVER_DESC=PostgreSQL
      - PHP_PG_ADMIN_SERVER_HOST=senzing-postgres
      - PHP_PG_ADMIN_SERVER_PORT=5432
      - PHP_PG_ADMIN_SERVER_SSL_MODE=allow
      - PHP_PG_ADMIN_SERVER_DEFAULT_DB=template1
      - PHP_PG_ADMIN_SERVER_PG_DUMP_PATH=/usr/bin/pg_dump
      - PHP_PG_ADMIN_SERVER_PG_DUMPALL_PATH=/usr/bin/pg_dumpall
      - PHP_PG_ADMIN_DEFAULT_LANG=auto
      - PHP_PG_ADMIN_AUTO_COMPLETE=default on
      - PHP_PG_ADMIN_EXTRA_LOGIN_SECURITY=false
      - PHP_PG_ADMIN_OWNED_ONLY=false
      - PHP_PG_ADMIN_SHOW_COMMENTS=true
      - PHP_PG_ADMIN_SHOW_ADVANCED=false
      - PHP_PG_ADMIN_SHOW_SYSTEM=false
      - PHP_PG_ADMIN_MIN_PASSWORD_LENGTH=1
      - PHP_PG_ADMIN_LEFT_WIDTH=200
      - PHP_PG_ADMIN_THEME=default
      - PHP_PG_ADMIN_SHOW_OIDS=false
      - PHP_PG_ADMIN_MAX_ROWS=30
      - PHP_PG_ADMIN_MAX_CHARS=50
      - PHP_PG_ADMIN_USE_XHTML_STRICT=false
      - PHP_PG_ADMIN_HELP_BASE=http://www.postgresql.org/docs/%s/interactive/
      - PHP_PG_ADMIN_AJAX_REFRESH=3
    image: senzing/phppgadmin:1.0.0
    networks:
      - backend
    ports:
      - 9171:80
      - 9172:443
    restart: always

  initcontainer:
    container_name: senzing-init-container
    depends_on:
      - postgres
      - postgresinit
    environment:
#     See https://github.com/Senzing/docker-init-container#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432/${POSTGRES_DB}"
      SENZING_INIT_CONTAINER_SLEEP: 30
    image: senzing/init-container:1.5.2
    networks:
      - backend
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  debug:
    container_name: senzing-debug
    image: senzing/senzing-debug:1.3.0
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  loader:
    container_name: senzing-stream-loader
    depends_on:
      - rabbitmq
      - postgres
    environment:
      LC_CTYPE: en_US.utf8
#     See https://github.com/Senzing/stream-loader#configuration
      SENZING_DATA_SOURCE: ${SENZING_DATA_SOURCE}
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432/${POSTGRES_DB}"
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_ENTITY_TYPE: ${SENZING_ENTITY_TYPE}
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS}
      SENZING_PROCESSES: ${SENZING_PROCESSES}
      SENZING_RABBITMQ_HOST: senzing-rabbitmq
      SENZING_RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
      SENZING_RABBITMQ_QUEUE: senzing-rabbitmq-queue
      SENZING_RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
      SENZING_SUBCOMMAND: rabbitmq
    image: senzing/stream-loader:1.5.3
    networks:
      - backend
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  redoer:
    container_name: senzing-redoer
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/redoer#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432/${POSTGRES_DB}"
      SENZING_DELAY_IN_SECONDS: 60
      SENZING_MONITORING_PERIOD_IN_SECONDS: ${SENZING_MONITORING_PERIOD_IN_SECONDS}
      SENZING_SUBCOMMAND: redo
    image: senzing/redoer:1.2.1
    networks:
      - backend
    privileged: true
    restart: on-failure
    user: "0"
    volumes:
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  api:
    container_name: senzing-api-server
    command:
      - -httpPort
      - "8250"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
    depends_on:
      - postgres
    environment:
#     See https://github.com/Senzing/senzing-api-server#configuration
      SENZING_DATABASE_URL: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432/${POSTGRES_DB}"
    image: senzing/senzing-api-server:1.7.10
    networks:
      - backend
    ports:
      - 8250:8250
    restart: always
    volumes:
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

  webapp:
    container_name: senzing-webapp
    depends_on:
      - api
    environment:
#     See https://github.com/Senzing/entity-search-web-app#configuration
      SENZING_API_SERVER_URL: "http://senzing-api-server:8250"
      SENZING_WEB_SERVER_PORT: 8251
    image: senzing/entity-search-web-app:1.0.4
    networks:
      - backend
    ports:
      - 8251:8251
    restart: always

  jupyter:
    container_name: senzing-jupyter
    command:
      - start.sh
      - jupyter
      - notebook
      - "--NotebookApp.token=''"
    depends_on:
      - loader
    environment:
#     See https://github.com/Senzing/docker-jupyter#configuration
      SENZING_SQL_CONNECTION: "postgresql://${POSTGRES_USERNAME}:${POSTGRES_PASSWORD}@senzing-postgres:5432:${POSTGRES_DB}/"
    image: senzing/jupyter:1.1.5
    networks:
      - backend
    ports:
      - 9178:8888
    restart: always
    volumes:
      - ${JUPYTER_NOTEBOOKS_SHARED_DIR}:/notebooks/shared
      - ${SENZING_DATA_VERSION_DIR}:/opt/senzing/data
      - ${SENZING_ETC_DIR}:/etc/opt/senzing
      - ${SENZING_G2_DIR}:/opt/senzing/g2

networks:
  backend:
